@page
@model IndexModel
@using Microsoft.AspNetCore.Http.Features

@{
    ViewData["Title"] = "Home page";
    var httpConnectionFeature = this.Request.HttpContext.Features.Get<IHttpConnectionFeature>();
    var localIpAddress = httpConnectionFeature?.LocalIpAddress;

    // If CacheControlMaxAgeSeconds app setting is set, and is a valid integer, set the cache-control header.
    if (!string.IsNullOrWhiteSpace(Startup.Configuration["CacheControlHeaderValue"]))
    {
        this.Response.Headers.CacheControl = Startup.Configuration["CacheControlHeaderValue"].Trim();
    }
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet">building Web apps with ASP.NET</a>.</p>

    <style>
        table { text-align: left }
    </style>

    <table>
        <tr>
            <th>Request.Host</th>
            <td>@this.Request.Host</td>
        </tr>
        <tr>
            <th>RemoteIpAddress</th>
            <td>@this.Request.HttpContext.Connection.RemoteIpAddress</td>
        </tr>
        <tr>
            <th>LocalIpAddress</th>
            <td>@localIpAddress</td>
        </tr>
        <tr>
            <th>UtcNow</th>
            <td>@DateTime.UtcNow</td>
        </tr>
        <tr>
            <th>WEBSITE_INSTANCE_ID</th>
            <td>@Environment.GetEnvironmentVariables()["WEBSITE_INSTANCE_ID"]</td>
        </tr>
        <tr>
            <th>COMPUTERNAME</th>
            <td>@Environment.GetEnvironmentVariables()["COMPUTERNAME"]</td>
        </tr>
        @if (StorageService.StorageIsConfigured())
        {
            <tr>
                <th>@Startup.Configuration["Blob.Path"]</th>
                <td>@await StorageService.GetBlobContent()</td>
            </tr>
            <tr>
                <td colspan="2">@StorageService.GetStorageServerIps()</td>
            </tr>
        }
        @foreach (var result in this.Model._result)
        {
            <tr>
                <th>@result.Key</th>
                <td>@System.Text.Json.JsonSerializer.Serialize(result.Value)</td>
            </tr>
        }
    </table>

</div>
